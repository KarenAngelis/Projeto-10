* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

:root {
  font-size: 62.5%;
  --color-base-white: #fff;
  --color-base-gray-100: #f5f5f5;
  --color-base-gray-900:#202024;
  --color-base-gray-300: #8d8d99;
  --color-base-gray-200: #EEE;
  --color-base-gray-400: #3D3D3D
}

body {
  font-size: 1.6rem;
  font-family: 'Mulish', sans-serif;
  background-color: var(--color-base-white);
}


#app {
  display: grid;
  grid-template-rows: max-content 1fr max-content;
  height: 100vh;
}

.container {
  padding: 1.6rem 3.2rem;
  width: min(112rem, 100%);
  margin: 0 auto;
}


header, .input-wrapper,
nav,
nav ul{
  display: flex;
  align-items: center;
  gap: 7.5rem;
  font-weight: 700;
}

header form{
  flex: 1; /* Vai preencher todo o espaço pra ele */
}

nav ul{
  list-style: none; /* Remove os marcadores padrão */
  padding: 0; /* Remove o espaçamento interno */
  margin: 0; /* Remove o espaçamento externo */
  font-size: 1.8rem;
  color: var(--color-base-gray-300);
}

ul li.active{
  color: var(--color-base-gray-900);
}

.input-wrapper label{
  width: 1px;
  height: 1px;
  overflow: hidden;
  position: absolute;
}

.input-wrapper input{
  width: 100%;
  padding: 1.6rem;
  
  border-radius: .6rem;
  border: 0;
  background: var(--color-base-gray-200);
  opacity: 0.56;
  font-family: 'Mulish', sans-serif;
  
  color: var(--color-base-gray-400);
  font-size: 1.6rem;
  font-weight: 600;
}

.input-wrapper input::placeholder{
  color: var(--color-base-gray-400);
}


.foto {
  width: 4.2rem;
  height: 4.2rem;

  object-fit: cover; /* Quando você define object-fit: cover;
   você está instruindo o navegador a ajustar a imagem para 
   preencher completamente o contêiner, mantendo a proporção 
   original da imagem. Isso significa que a imagem será redimensionada
   para cobrir todo o espaço disponível no contêiner, podendo recortar
   partes da imagem se necessário, para garantir que ela preencha o espaço. */
 
   border-radius: 50%;
   flex-shrink: 0;
}

main {
  overflow-y: scroll;
  background-color: var(--color-base-gray-100);
}

/*Galery*/

main h1{
  font-size: 2.4rem;
  padding-top: 1.6rem;
}

.galery{
  margin-top: 3.2rem;

  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap:2.2rem;
}

.item img{
  width: 100%;
  aspect-ratio: 16/9; /* é usada para definir a proporção de aspecto (largura/altura)
   de um elemento. Essa propriedade permite que você especifique a proporção desejada,
   o que pode ser especialmente útil para elementos responsivos, como imagens e vídeos.*/
   object-fit: cover;
   filter: grayscale(0.2);
   /*transition-property: all; Posso colocar por vírgula todas as proporções em que
   eu quero aplicar, ou all que vai pegar todas :hover
   transition-duration: 1s;
   transition-delay: 1s;
   transition-timing-function:ease-out ; 
   
   Posso fazer assim:
   transition: filter 1s 1s ease-out, transform 2s 2s ease-in ;*/

   transition: all 1s 1s ease-out;

}



.item img:hover{
    filter: hue-rotate(7deg) contrast(101%) saturate(200%);
    transform: scale(1.1) rotate(-1deg);
}

.item {
  background: var(--color-base-white);
  border-radius: 0.7rem;
  height: 28.7rem;
  overflow: hidden;
}

.details {
  padding: 2.2rem;
  background: var(--color-base-white);
  z-index: 1;
  position: relative;

}

.details h2{
  font-size: 1.8rem;
}

.tags{
  margin-top: 1.2rem;
}

.tags span{
  font-size: 1.2rem;
  color: var(--color-base-gray-900);
  padding: .6rem;
  background-color: var(--color-base-gray-100);
  border-radius: .5rem;
  line-height: 0;
}


footer p{
  text-align: center;
  padding: 1.6rem;
  font-weight: 600;
 
}

